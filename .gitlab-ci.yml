stages:
  - build
  - deploy

variables:
  GIT_DEPTH: 0 # Ensure full history is available if needed by some tools, though not strictly for this LaTeX setup

# Job to build PDF
build_pdf:
  stage: build
  image: texlive/texlive:latest # Use a Docker image with TeX Live
  script:
    - echo "Starting PDF compilation..."
    - pdflatex main.tex # Compile your main LaTeX file to PDF
    - echo "PDF compilation complete."
  artifacts:
    paths:
      - main.pdf # Store the compiled PDF as an artifact
    expire_in: 1 week # How long to keep the artifact in GitLab

# Job to build HTML
build_html:
  stage: build
  image: texlive/texlive:latest # Use the same TeX Live Docker image
  script:
    - echo "Starting HTML compilation with mk4ht..."
    # Ensure custom.css is moved before mk4ht if you rely on it being next to main.tex
    - mk4ht htlatex main.tex "xhtml,css=custom.css" "-p" # Compile LaTeX to HTML
    - mkdir -p html_output # Create the directory for HTML output
    - mv main.html html_output/ # Move the main HTML file
    - if [ -f main.css ]; then mv main.css html_output/; fi # Move tex4ht's default CSS if generated
    - if [ -f custom.css ]; then mv custom.css html_output/; fi # Move your custom CSS
    - if [ -d main-images ]; then mv main-images html_output/; fi # Move images if any
    - echo "HTML compilation complete."
  artifacts:
    paths:
      - html_output/ # Store the HTML output directory as an artifact
    expire_in: 1 week

# Job to deploy to GitLab Pages
pages:
  stage: deploy
  image: alpine/git # The image that's causing the issue
  script:
    - sh -c "echo 'Downloading artifacts...'" # <--- Add sh -c ""
    - sh -c "cp build_pdf/main.pdf ."        # <--- Add sh -c ""
    - sh -c "cp -r build_html/html_output ." # <--- Add sh -c ""
    - sh -c "mkdir public"                   # <--- Add sh -c ""
    - sh -c "mv main.pdf public/"            # <--- Add sh -c ""
    - sh -c "mv html_output public/"         # <--- Add sh -c ""
    - sh -c "echo 'Files prepared for GitLab Pages deployment.'" # <--- Add sh -c ""
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "tutorial"